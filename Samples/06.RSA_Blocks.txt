#
#------------------------ RSA-Blocks Encryption -------------------------------
#
# ( Add blanks if not divisible by 4)
#
def encode1(s,n,e):
    s=str(s) # making input a string
    r1=sum(ord(s[i])*1024^i for i in range(len(s)))
    r2=power_mod(r1,e,n) 
    return r2
#-------------------------------------------------
def decode1(m,n,d):
    n=power_mod(m,d,n)
    n=Integer(n)
    v=[]
    while n != 0 :
        v.append(chr(n % 1024))
        n //=1024  # this replace n by floor (n/1024)
    return ''.join(v)
#-------------------------------------------------
def encode(s,n,e):
    s=str(s) # making input a string
    L=[]
    PL=[]
    if len(s) % 4== 1 :
        s+='   '    # add to s three blanks
    if len(s) % 4== 2 :
        s+='  '     # add to s two blanks
    if len(s) % 4== 3:
        s+=' '     # add to s one blanks
    m=len(s)/4-1
    for i in [0..m]:
        k=4*i
        PL.append(s[k:k+4])
    for i in range (0,len(PL)):
        r=encode1(PL[i],n,e)
        L.append(r)
    return L
#-------------------------------------------------
def decode(L,n,d):
    PL=[]
    for i in range (0,len(L)):
        r=decode1(L[i],n,d)
        PL.append(r)
    return ''.join(PL)
p=next_prime(3^98)
q=next_prime(7^89)
e=next_prime(2^57)    
n=p*q
#
#------------------->     Publickey is (n,e)
#
pn=(p-1)*(q-1)
d=inverse_mod(e,pn)
#
#--------------------> Private (security) key is (n,d)
#
u='Some day there will be a new world of shining hope for your family, your fatherland and your mankind' 
print(' The Plain text is :', u)
print()
print()
c=encode(u,n,e)
print(' The Cipher text is :', c)
print()
print()
r=decode(c,n,d)
print(' After decrytion, The original text is :', r)